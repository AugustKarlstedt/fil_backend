#pragma once
#include <iostream>
#include <herring2/detail/gpu_constants.hpp>  // Can be removed with iostream
#include <herring2/detail/infer/algorithm_selector.hpp>
#include <herring2/detail/infer/block_thread_selector.hpp>
#include <herring2/detail/infer/infer_kernel.cuh>
#include <herring2/exceptions.hpp>
#include <herring2/forest.hpp>
#include <kayak/cuda_stream.hpp>
#include <kayak/data_array.hpp>
#include <kayak/detail/index_type.hpp>
#include <kayak/device_type.hpp>
#include <kayak/gpu_support.hpp>
#include <type_traits>

namespace herring {
namespace detail {
namespace inference {

template<
  kayak::device_type D,
  typename forest_t,
  typename io_t
>
std::enable_if_t<D == kayak::device_type::gpu && kayak::GPU_ENABLED, void> predict(
  forest_t const& model_forest, 
  kayak::data_array<kayak::data_layout::dense_row_major, io_t>& out,
  kayak::data_array<kayak::data_layout::dense_row_major, io_t> const& in,
  kayak::raw_index_t num_class,
  element_op element_postproc,
  row_op row_postproc,
  io_t average_factor,
  io_t bias,
  io_t postproc_constant,
  int device_id,
  kayak::cuda_stream stream
) {

  auto kernel_params = block_thread_selector(in, num_class, device_id);

  std::cout << model_forest.tree_count() << " trees will be distributed over "
    << kernel_params.threads_per_block / gpu::WARP_SIZE << " warps with "
    << kernel_params.shared_memory_bytes_per_block << " bytes of shared memory\n";

  auto constexpr must_lookup = !(
    std::is_same_v<typename forest_t::output_type, typename forest_t::value_type> ||
    std::is_same_v<typename forest_t::output_index_type, typename forest_t::value_type>
  );
  if (must_lookup && !model_forest.requires_output_lookup()) {
    throw unusable_model_exception{
      "Model output must be stored separately, but no separate storage location provided"
    };
  }

  switch(select_prediction_algorithm(model_forest)) {
    case ((0u << 2) + (0u << 1) + 0u):
      gpu::infer_kernel<false, must_lookup, false><<<kernel_params.blocks, kernel_params.threads_per_block, kernel_params.shared_memory_bytes_per_block, stream>>>(model_forest, out, in, num_class, element_postproc, row_postproc, average_factor, bias, postproc_constant, kernel_params.shared_memory_bytes_per_block);
      break;
    case ((0u << 2) + (0u << 1) + 1u):
      gpu::infer_kernel<false, must_lookup, true><<<kernel_params.blocks, kernel_params.threads_per_block, kernel_params.shared_memory_bytes_per_block, stream>>>(model_forest, out, in, num_class, element_postproc, row_postproc, average_factor, bias, postproc_constant, kernel_params.shared_memory_bytes_per_block);
      break;
    case ((0u << 2) + (1u << 1) + 0u):
      gpu::infer_kernel<false, true, false><<<kernel_params.blocks, kernel_params.threads_per_block, kernel_params.shared_memory_bytes_per_block, stream>>>(model_forest, out, in, num_class, element_postproc, row_postproc, average_factor, bias, postproc_constant, kernel_params.shared_memory_bytes_per_block);
      break;
    case ((0u << 2) + (1u << 1) + 1u):
      gpu::infer_kernel<false, true, true><<<kernel_params.blocks, kernel_params.threads_per_block, kernel_params.shared_memory_bytes_per_block, stream>>>(model_forest, out, in, num_class, element_postproc, row_postproc, average_factor, bias, postproc_constant, kernel_params.shared_memory_bytes_per_block);
      break;
    case ((1u << 2) + (0u << 1) + 0u):
      gpu::infer_kernel<true, must_lookup, false><<<kernel_params.blocks, kernel_params.threads_per_block, kernel_params.shared_memory_bytes_per_block, stream>>>(model_forest, out, in, num_class, element_postproc, row_postproc, average_factor, bias, postproc_constant, kernel_params.shared_memory_bytes_per_block);
      break;
    case ((1u << 2) + (0u << 1) + 1u):
      gpu::infer_kernel<true, must_lookup, true><<<kernel_params.blocks, kernel_params.threads_per_block, kernel_params.shared_memory_bytes_per_block, stream>>>(model_forest, out, in, num_class, element_postproc, row_postproc, average_factor, bias, postproc_constant, kernel_params.shared_memory_bytes_per_block);
      break;
    case ((1u << 2) + (1u << 1) + 0u):
      gpu::infer_kernel<true, true, false><<<kernel_params.blocks, kernel_params.threads_per_block, kernel_params.shared_memory_bytes_per_block, stream>>>(model_forest, out, in, num_class, element_postproc, row_postproc, average_factor, bias, postproc_constant, kernel_params.shared_memory_bytes_per_block);
      break;
    case ((1u << 2) + (1u << 1) + 1u):
      gpu::infer_kernel<true, true, true><<<kernel_params.blocks, kernel_params.threads_per_block, kernel_params.shared_memory_bytes_per_block, stream>>>(model_forest, out, in, num_class, element_postproc, row_postproc, average_factor, bias, postproc_constant, kernel_params.shared_memory_bytes_per_block);
      break;
    default:
      throw unusable_model_exception("Unexpected algorithm selection");
  }
}

// single IO, single threshold, few features
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint16_t, uint16_t, uint32_t, float, false>, float>(forest<kayak::tree_layout::depth_first, float, uint16_t, uint16_t, uint32_t, float, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint16_t, uint16_t, uint32_t, float, true>, float>(forest<kayak::tree_layout::depth_first, float, uint16_t, uint16_t, uint32_t, float, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint16_t, uint16_t, uint32_t, double, false>, float>(forest<kayak::tree_layout::depth_first, float, uint16_t, uint16_t, uint32_t, double, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint16_t, uint16_t, uint32_t, double, true>, float>(forest<kayak::tree_layout::depth_first, float, uint16_t, uint16_t, uint32_t, double, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint16_t, uint16_t, uint32_t, uint32_t, false>, float>(forest<kayak::tree_layout::depth_first, float, uint16_t, uint16_t, uint32_t, uint32_t, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint16_t, uint16_t, uint32_t, uint32_t, true>, float>(forest<kayak::tree_layout::depth_first, float, uint16_t, uint16_t, uint32_t, uint32_t, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint16_t, uint32_t, uint32_t, float, false>, float>(forest<kayak::tree_layout::depth_first, float, uint16_t, uint32_t, uint32_t, float, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint16_t, uint32_t, uint32_t, float, true>, float>(forest<kayak::tree_layout::depth_first, float, uint16_t, uint32_t, uint32_t, float, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint16_t, uint32_t, uint32_t, double, false>, float>(forest<kayak::tree_layout::depth_first, float, uint16_t, uint32_t, uint32_t, double, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint16_t, uint32_t, uint32_t, double, true>, float>(forest<kayak::tree_layout::depth_first, float, uint16_t, uint32_t, uint32_t, double, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint16_t, uint32_t, uint32_t, uint32_t, false>, float>(forest<kayak::tree_layout::depth_first, float, uint16_t, uint32_t, uint32_t, uint32_t, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint16_t, uint32_t, uint32_t, uint32_t, true>, float>(forest<kayak::tree_layout::depth_first, float, uint16_t, uint32_t, uint32_t, uint32_t, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);

// single IO, single threshold, many features
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint32_t, uint16_t, uint32_t, float, false>, float>(forest<kayak::tree_layout::depth_first, float, uint32_t, uint16_t, uint32_t, float, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint32_t, uint16_t, uint32_t, float, true>, float>(forest<kayak::tree_layout::depth_first, float, uint32_t, uint16_t, uint32_t, float, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint32_t, uint16_t, uint32_t, double, false>, float>(forest<kayak::tree_layout::depth_first, float, uint32_t, uint16_t, uint32_t, double, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint32_t, uint16_t, uint32_t, double, true>, float>(forest<kayak::tree_layout::depth_first, float, uint32_t, uint16_t, uint32_t, double, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint32_t, uint16_t, uint32_t, uint32_t, false>, float>(forest<kayak::tree_layout::depth_first, float, uint32_t, uint16_t, uint32_t, uint32_t, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint32_t, uint16_t, uint32_t, uint32_t, true>, float>(forest<kayak::tree_layout::depth_first, float, uint32_t, uint16_t, uint32_t, uint32_t, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint32_t, uint32_t, uint32_t, float, false>, float>(forest<kayak::tree_layout::depth_first, float, uint32_t, uint32_t, uint32_t, float, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint32_t, uint32_t, uint32_t, float, true>, float>(forest<kayak::tree_layout::depth_first, float, uint32_t, uint32_t, uint32_t, float, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint32_t, uint32_t, uint32_t, double, false>, float>(forest<kayak::tree_layout::depth_first, float, uint32_t, uint32_t, uint32_t, double, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint32_t, uint32_t, uint32_t, double, true>, float>(forest<kayak::tree_layout::depth_first, float, uint32_t, uint32_t, uint32_t, double, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint32_t, uint32_t, uint32_t, uint32_t, false>, float>(forest<kayak::tree_layout::depth_first, float, uint32_t, uint32_t, uint32_t, uint32_t, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint32_t, uint32_t, uint32_t, uint32_t, true>, float>(forest<kayak::tree_layout::depth_first, float, uint32_t, uint32_t, uint32_t, uint32_t, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);

// single IO, double threshold, few features
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint16_t, uint16_t, uint32_t, float, false>, float>(forest<kayak::tree_layout::depth_first, double, uint16_t, uint16_t, uint32_t, float, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint16_t, uint16_t, uint32_t, float, true>, float>(forest<kayak::tree_layout::depth_first, double, uint16_t, uint16_t, uint32_t, float, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint16_t, uint16_t, uint32_t, double, false>, float>(forest<kayak::tree_layout::depth_first, double, uint16_t, uint16_t, uint32_t, double, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint16_t, uint16_t, uint32_t, double, true>, float>(forest<kayak::tree_layout::depth_first, double, uint16_t, uint16_t, uint32_t, double, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint16_t, uint16_t, uint32_t, uint32_t, false>, float>(forest<kayak::tree_layout::depth_first, double, uint16_t, uint16_t, uint32_t, uint32_t, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint16_t, uint16_t, uint32_t, uint32_t, true>, float>(forest<kayak::tree_layout::depth_first, double, uint16_t, uint16_t, uint32_t, uint32_t, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint16_t, uint32_t, uint32_t, float, false>, float>(forest<kayak::tree_layout::depth_first, double, uint16_t, uint32_t, uint32_t, float, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint16_t, uint32_t, uint32_t, float, true>, float>(forest<kayak::tree_layout::depth_first, double, uint16_t, uint32_t, uint32_t, float, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint16_t, uint32_t, uint32_t, double, false>, float>(forest<kayak::tree_layout::depth_first, double, uint16_t, uint32_t, uint32_t, double, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint16_t, uint32_t, uint32_t, double, true>, float>(forest<kayak::tree_layout::depth_first, double, uint16_t, uint32_t, uint32_t, double, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint16_t, uint32_t, uint32_t, uint32_t, false>, float>(forest<kayak::tree_layout::depth_first, double, uint16_t, uint32_t, uint32_t, uint32_t, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint16_t, uint32_t, uint32_t, uint32_t, true>, float>(forest<kayak::tree_layout::depth_first, double, uint16_t, uint32_t, uint32_t, uint32_t, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);

// single IO, double threshold, many features
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint32_t, uint16_t, uint32_t, float, false>, float>(forest<kayak::tree_layout::depth_first, double, uint32_t, uint16_t, uint32_t, float, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint32_t, uint16_t, uint32_t, float, true>, float>(forest<kayak::tree_layout::depth_first, double, uint32_t, uint16_t, uint32_t, float, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint32_t, uint16_t, uint32_t, double, false>, float>(forest<kayak::tree_layout::depth_first, double, uint32_t, uint16_t, uint32_t, double, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint32_t, uint16_t, uint32_t, double, true>, float>(forest<kayak::tree_layout::depth_first, double, uint32_t, uint16_t, uint32_t, double, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint32_t, uint16_t, uint32_t, uint32_t, false>, float>(forest<kayak::tree_layout::depth_first, double, uint32_t, uint16_t, uint32_t, uint32_t, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint32_t, uint16_t, uint32_t, uint32_t, true>, float>(forest<kayak::tree_layout::depth_first, double, uint32_t, uint16_t, uint32_t, uint32_t, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint32_t, uint32_t, uint32_t, float, false>, float>(forest<kayak::tree_layout::depth_first, double, uint32_t, uint32_t, uint32_t, float, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint32_t, uint32_t, uint32_t, float, true>, float>(forest<kayak::tree_layout::depth_first, double, uint32_t, uint32_t, uint32_t, float, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint32_t, uint32_t, uint32_t, double, false>, float>(forest<kayak::tree_layout::depth_first, double, uint32_t, uint32_t, uint32_t, double, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint32_t, uint32_t, uint32_t, double, true>, float>(forest<kayak::tree_layout::depth_first, double, uint32_t, uint32_t, uint32_t, double, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint32_t, uint32_t, uint32_t, uint32_t, false>, float>(forest<kayak::tree_layout::depth_first, double, uint32_t, uint32_t, uint32_t, uint32_t, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint32_t, uint32_t, uint32_t, uint32_t, true>, float>(forest<kayak::tree_layout::depth_first, double, uint32_t, uint32_t, uint32_t, uint32_t, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, float>&, kayak::data_array<kayak::data_layout::dense_row_major, float> const&, kayak::raw_index_t, element_op, row_op, float, float, float, int, kayak::cuda_stream);

// double IO, single threshold, few features
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint16_t, uint16_t, uint32_t, float, false>, double>(forest<kayak::tree_layout::depth_first, float, uint16_t, uint16_t, uint32_t, float, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint16_t, uint16_t, uint32_t, float, true>, double>(forest<kayak::tree_layout::depth_first, float, uint16_t, uint16_t, uint32_t, float, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint16_t, uint16_t, uint32_t, double, false>, double>(forest<kayak::tree_layout::depth_first, float, uint16_t, uint16_t, uint32_t, double, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint16_t, uint16_t, uint32_t, double, true>, double>(forest<kayak::tree_layout::depth_first, float, uint16_t, uint16_t, uint32_t, double, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint16_t, uint16_t, uint32_t, uint32_t, false>, double>(forest<kayak::tree_layout::depth_first, float, uint16_t, uint16_t, uint32_t, uint32_t, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint16_t, uint16_t, uint32_t, uint32_t, true>, double>(forest<kayak::tree_layout::depth_first, float, uint16_t, uint16_t, uint32_t, uint32_t, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint16_t, uint32_t, uint32_t, float, false>, double>(forest<kayak::tree_layout::depth_first, float, uint16_t, uint32_t, uint32_t, float, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint16_t, uint32_t, uint32_t, float, true>, double>(forest<kayak::tree_layout::depth_first, float, uint16_t, uint32_t, uint32_t, float, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint16_t, uint32_t, uint32_t, double, false>, double>(forest<kayak::tree_layout::depth_first, float, uint16_t, uint32_t, uint32_t, double, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint16_t, uint32_t, uint32_t, double, true>, double>(forest<kayak::tree_layout::depth_first, float, uint16_t, uint32_t, uint32_t, double, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint16_t, uint32_t, uint32_t, uint32_t, false>, double>(forest<kayak::tree_layout::depth_first, float, uint16_t, uint32_t, uint32_t, uint32_t, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint16_t, uint32_t, uint32_t, uint32_t, true>, double>(forest<kayak::tree_layout::depth_first, float, uint16_t, uint32_t, uint32_t, uint32_t, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);

// double IO, single threshold, many features
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint32_t, uint16_t, uint32_t, float, false>, double>(forest<kayak::tree_layout::depth_first, float, uint32_t, uint16_t, uint32_t, float, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint32_t, uint16_t, uint32_t, float, true>, double>(forest<kayak::tree_layout::depth_first, float, uint32_t, uint16_t, uint32_t, float, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint32_t, uint16_t, uint32_t, double, false>, double>(forest<kayak::tree_layout::depth_first, float, uint32_t, uint16_t, uint32_t, double, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint32_t, uint16_t, uint32_t, double, true>, double>(forest<kayak::tree_layout::depth_first, float, uint32_t, uint16_t, uint32_t, double, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint32_t, uint16_t, uint32_t, uint32_t, false>, double>(forest<kayak::tree_layout::depth_first, float, uint32_t, uint16_t, uint32_t, uint32_t, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint32_t, uint16_t, uint32_t, uint32_t, true>, double>(forest<kayak::tree_layout::depth_first, float, uint32_t, uint16_t, uint32_t, uint32_t, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint32_t, uint32_t, uint32_t, float, false>, double>(forest<kayak::tree_layout::depth_first, float, uint32_t, uint32_t, uint32_t, float, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint32_t, uint32_t, uint32_t, float, true>, double>(forest<kayak::tree_layout::depth_first, float, uint32_t, uint32_t, uint32_t, float, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint32_t, uint32_t, uint32_t, double, false>, double>(forest<kayak::tree_layout::depth_first, float, uint32_t, uint32_t, uint32_t, double, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint32_t, uint32_t, uint32_t, double, true>, double>(forest<kayak::tree_layout::depth_first, float, uint32_t, uint32_t, uint32_t, double, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint32_t, uint32_t, uint32_t, uint32_t, false>, double>(forest<kayak::tree_layout::depth_first, float, uint32_t, uint32_t, uint32_t, uint32_t, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, float, uint32_t, uint32_t, uint32_t, uint32_t, true>, double>(forest<kayak::tree_layout::depth_first, float, uint32_t, uint32_t, uint32_t, uint32_t, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);

// double IO, double threshold, few features
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint16_t, uint16_t, uint32_t, float, false>, double>(forest<kayak::tree_layout::depth_first, double, uint16_t, uint16_t, uint32_t, float, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint16_t, uint16_t, uint32_t, float, true>, double>(forest<kayak::tree_layout::depth_first, double, uint16_t, uint16_t, uint32_t, float, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint16_t, uint16_t, uint32_t, double, false>, double>(forest<kayak::tree_layout::depth_first, double, uint16_t, uint16_t, uint32_t, double, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint16_t, uint16_t, uint32_t, double, true>, double>(forest<kayak::tree_layout::depth_first, double, uint16_t, uint16_t, uint32_t, double, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint16_t, uint16_t, uint32_t, uint32_t, false>, double>(forest<kayak::tree_layout::depth_first, double, uint16_t, uint16_t, uint32_t, uint32_t, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint16_t, uint16_t, uint32_t, uint32_t, true>, double>(forest<kayak::tree_layout::depth_first, double, uint16_t, uint16_t, uint32_t, uint32_t, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint16_t, uint32_t, uint32_t, float, false>, double>(forest<kayak::tree_layout::depth_first, double, uint16_t, uint32_t, uint32_t, float, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint16_t, uint32_t, uint32_t, float, true>, double>(forest<kayak::tree_layout::depth_first, double, uint16_t, uint32_t, uint32_t, float, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint16_t, uint32_t, uint32_t, double, false>, double>(forest<kayak::tree_layout::depth_first, double, uint16_t, uint32_t, uint32_t, double, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint16_t, uint32_t, uint32_t, double, true>, double>(forest<kayak::tree_layout::depth_first, double, uint16_t, uint32_t, uint32_t, double, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint16_t, uint32_t, uint32_t, uint32_t, false>, double>(forest<kayak::tree_layout::depth_first, double, uint16_t, uint32_t, uint32_t, uint32_t, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint16_t, uint32_t, uint32_t, uint32_t, true>, double>(forest<kayak::tree_layout::depth_first, double, uint16_t, uint32_t, uint32_t, uint32_t, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);

// double IO, double threshold, many features
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint32_t, uint16_t, uint32_t, float, false>, double>(forest<kayak::tree_layout::depth_first, double, uint32_t, uint16_t, uint32_t, float, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint32_t, uint16_t, uint32_t, float, true>, double>(forest<kayak::tree_layout::depth_first, double, uint32_t, uint16_t, uint32_t, float, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint32_t, uint16_t, uint32_t, double, false>, double>(forest<kayak::tree_layout::depth_first, double, uint32_t, uint16_t, uint32_t, double, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint32_t, uint16_t, uint32_t, double, true>, double>(forest<kayak::tree_layout::depth_first, double, uint32_t, uint16_t, uint32_t, double, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint32_t, uint16_t, uint32_t, uint32_t, false>, double>(forest<kayak::tree_layout::depth_first, double, uint32_t, uint16_t, uint32_t, uint32_t, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint32_t, uint16_t, uint32_t, uint32_t, true>, double>(forest<kayak::tree_layout::depth_first, double, uint32_t, uint16_t, uint32_t, uint32_t, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint32_t, uint32_t, uint32_t, float, false>, double>(forest<kayak::tree_layout::depth_first, double, uint32_t, uint32_t, uint32_t, float, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint32_t, uint32_t, uint32_t, float, true>, double>(forest<kayak::tree_layout::depth_first, double, uint32_t, uint32_t, uint32_t, float, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint32_t, uint32_t, uint32_t, double, false>, double>(forest<kayak::tree_layout::depth_first, double, uint32_t, uint32_t, uint32_t, double, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint32_t, uint32_t, uint32_t, double, true>, double>(forest<kayak::tree_layout::depth_first, double, uint32_t, uint32_t, uint32_t, double, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint32_t, uint32_t, uint32_t, uint32_t, false>, double>(forest<kayak::tree_layout::depth_first, double, uint32_t, uint32_t, uint32_t, uint32_t, false> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);
extern template void predict<kayak::device_type::gpu, forest<kayak::tree_layout::depth_first, double, uint32_t, uint32_t, uint32_t, uint32_t, true>, double>(forest<kayak::tree_layout::depth_first, double, uint32_t, uint32_t, uint32_t, uint32_t, true> const&, kayak::data_array<kayak::data_layout::dense_row_major, double>&, kayak::data_array<kayak::data_layout::dense_row_major, double> const&, kayak::raw_index_t, element_op, row_op, double, double, double, int, kayak::cuda_stream);

}
}
}

